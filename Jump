-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "JumpGui"
screenGui.Parent = game.CoreGui

-- Create the Jump Button
local jumpButton = Instance.new("TextButton")
jumpButton.Size = UDim2.new(0, 100, 0, 50) -- Small size
jumpButton.Position = UDim2.new(0.5, -50, 0.5, -25) -- Centered on screen
jumpButton.Text = "Jump"
jumpButton.Parent = screenGui

-- Variables for dragging
local dragging = false
local dragStart
local startPos

-- Function to make the player jump
local function makePlayerJump()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if humanoid and rootPart then
        -- Set a conservative jump power and height
        humanoid.JumpPower = 50 -- Adjust as needed to be within game limits

        -- Apply a normal jump
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        humanoid.Jump = true

        -- Ensure height is not exceeded
        local maxHeight = 20 -- Adjust this to a reasonable limit

        local function monitorHeight()
            local originalPosition = rootPart.Position
            while wait(0.1) do
                if rootPart.Position.Y > (originalPosition.Y + maxHeight) then
                    rootPart.CFrame = CFrame.new(rootPart.Position.X, originalPosition.Y + maxHeight, rootPart.Position.Z)
                end
            end
        end

        -- Start monitoring in a separate coroutine
        coroutine.wrap(monitorHeight)()
    end
end

-- Dragging logic
jumpButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = jumpButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

jumpButton.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.Touch then
        local delta = input.Position - dragStart
        jumpButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Button Click and Touch Event
jumpButton.MouseButton1Click:Connect(makePlayerJump)
jumpButton.TouchTap:Connect(makePlayerJump)
